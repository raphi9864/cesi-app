const axios = require('axios');

const API_URL = 'http://localhost:5000/api/auth';

const testAuth = async () => {
  try {
    console.log('üß™ D√©but des tests d\'authentification...\n');

    // 1. Test de connexion
    console.log('1Ô∏è‚É£ Test de connexion...');
    const loginData = {
      email: 'test@example.com',
      password: 'azerty'
    };

    const loginResponse = await axios.post(`${API_URL}/login`, loginData);
    console.log('‚úÖ Connexion r√©ussie !');
    console.log('Token re√ßu:', loginResponse.data.token);
    console.log('Donn√©es utilisateur:', loginResponse.data.user);
    console.log('\n');

    // 2. Test d'acc√®s au profil
    console.log('2Ô∏è‚É£ Test d\'acc√®s au profil...');
    const token = loginResponse.data.token;
    const profileResponse = await axios.get(`${API_URL}/me`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    console.log('‚úÖ Acc√®s au profil r√©ussi !');
    console.log('Donn√©es du profil:', profileResponse.data);
    console.log('\n');

    // 3. Test d'acc√®s au profil sans token
    console.log('3Ô∏è‚É£ Test d\'acc√®s au profil sans token...');
    try {
      await axios.get(`${API_URL}/me`);
    } catch (error) {
      console.log('‚úÖ Test r√©ussi ! Acc√®s refus√© sans token');
      console.log('Message d\'erreur:', error.response?.data?.message);
    }
    console.log('\n');

    // 4. Test d'acc√®s au profil avec un token invalide
    console.log('4Ô∏è‚É£ Test d\'acc√®s au profil avec un token invalide...');
    try {
      await axios.get(`${API_URL}/me`, {
        headers: { Authorization: 'Bearer token_invalide' }
      });
    } catch (error) {
      console.log('‚úÖ Test r√©ussi ! Acc√®s refus√© avec token invalide');
      console.log('Message d\'erreur:', error.response?.data?.message);
    }

    console.log('\nüéâ Tous les tests d\'authentification ont r√©ussi !');
  } catch (error) {
    console.error('‚ùå Erreur lors des tests:', error.response?.data || error.message);
  }
};

testAuth(); 